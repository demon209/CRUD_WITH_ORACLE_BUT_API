<h2>Trang qu·∫£n l√Ω h√≥a ƒë∆°n</h2>

<div class="mb-3 d-flex flex-column flex-sm-row gap-2">
<input type="date" id="searchBox" class="form-control" placeholder="T√¨m theo ng√†y..." />
<button class="btn btn-success" onclick="openAddForm()">‚ûï Th√™m h√≥a ƒë∆°n</button>
</div>

<h2>Danh s√°ch h√≥a ƒë∆°n</h2>

<div class="table-responsive">
<table class="table table-striped table-bordered align-middle text-center">
    <thead class="table-light">
        <tr>
            <th>Order ID</th>
            <th>Customer ID</th>
            <th>Pet ID</th>
            <th>Product ID</th>
            <th>S·ªë l∆∞·ª£ng</th>
            <th>Ng√†y ƒë·∫∑t</th>
            <th>T·ªïng ti·ªÅn</th>
            <th>Thao t√°c</th>
        </tr>
    </thead>
    <tbody id="orders-body">
        <tr>
            <td colspan="8">‚è≥ ƒêang t·∫£i danh s√°ch...</td>
        </tr>
    </tbody>
</table>
</div>

<div class="d-flex justify-content-end mt-2" id="pagination"></div>

<!-- Modal Th√™m/S·ª≠a -->
<div id="orderModal" class="modal fade" tabindex="-1" role="dialog">
<div class="modal-dialog">
    <div class="modal-content">
        <form id="orderForm">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTitle">H√≥a ƒë∆°n</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="orderId" />

                <div class="mb-2">
                    <label for="customerId" class="form-label">Kh√°ch h√†ng</label>
                    <select class="form-select" id="customerSelect" required></select>
                </div>

                <div class="mb-2">
                    <label for="petId" class="form-label">Th√∫ c∆∞ng</label>
                    <select class="form-select" id="petSelect"></select>
                </div>

                <div class="mb-2">
                    <label for="productId" class="form-label">S·∫£n ph·∫©m</label>
                    <select class="form-select" id="productSelect"></select>
                </div>

                <div class="mb-2">
                    <label for="quantity" class="form-label">S·ªë l∆∞·ª£ng</label>
                    <input type="number" class="form-control" id="quantity" required />
                </div>

                <div class="mb-2">
                    <label for="orderDate" class="form-label">Ng√†y ƒë·∫∑t</label>
                    <input type="date" class="form-control" id="orderDate" required />
                </div>

                <div class="mb-2">
                    <input type="hidden" class="form-control" id="totalAmount" value="0" />
                </div>
            </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-primary">üíæ L∆∞u</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">ƒê√≥ng</button>
            </div>
        </form>
    </div>
</div>
</div>

<!-- Script x·ª≠ l√Ω -->
@section Scripts {
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script>
    const modal = new bootstrap.Modal(document.getElementById('orderModal'));
    let currentPage = 1;

    function loadOrders(keyword = "", page = 1) {
        currentPage = page;
        let apiUrl = `/api/orders/search?keyword=${encodeURIComponent(keyword)}&page=${page}`;

        $("#orders-body").html('<tr><td colspan="8">‚è≥ ƒêang t·∫£i...</td></tr>');

        $.get(apiUrl, function (data) {
            const tbody = $("#orders-body");
            tbody.empty();

            if (data.data.length === 0) {
                tbody.append(`<tr><td colspan="8" class="text-danger">Kh√¥ng c√≥ h√≥a ƒë∆°n.<a href="/HoaDon" class="btn btn-secondary">‚¨Ö Quay l·∫°i</a></td></tr>`);
                $("#pagination").empty();
                return;
            }

            data.data.forEach(o => {
                tbody.append(`
                            <tr>
                                <td>${o.orderId}</td>
                                <td>${o.customerId}</td>
                                <td>${o.petId ?? '-'}</td>
                                <td>${o.productId ?? '-'}</td>
                                <td>${o.productQuantity}</td>
                                <td>${new Date(o.orderDate).toLocaleDateString('en-GB') // 'en-GB' l√† ƒë·ªãnh d·∫°ng dd/mm/yyyy
                                    .replace(/\//g, '-')  // thay d·∫•u / th√†nh d·∫•u -
                                }</td>
                                <td>${o.totalAmount}</td>
                                <td>
                                    <button class="btn btn-warning btn-sm" onclick="openEditForm(${o.orderId})">‚úèÔ∏è S·ª≠a</button>
                                    <button class="btn btn-danger btn-sm" onclick="deleteOrder(${o.orderId})">‚ùå X√≥a</button>
                                    <a href="/Hoadon/OrderDetail?id=${o.orderId}" class="btn btn-info btn-sm">üîç Xem chi ti·∫øt</a>
                                </td>
                            </tr>`);
            });

            renderPagination(data.currentPage, data.totalPages);
        });
    }

    function renderPagination(current, total) {
        const container = $("#pagination");
        container.empty();
        for (let i = 1; i <= total; i++) {
            const btn = `<button onclick="loadOrders($('#searchBox').val(), ${i})"
                        class="btn btn-sm ${i === current ? 'btn-primary' : 'btn-outline-primary'} mx-1">${i}</button>`;
            container.append(btn);
        }
    }

    function openAddForm() {
        $("#modalTitle").text("‚ûï Th√™m h√≥a ƒë∆°n");
        $("#orderForm")[0].reset();
        $("#orderId").val('');
        modal.show();
    }

    function openEditForm(id) {
        $.get(`/api/orders/${id}`, function (data) {
            $("#modalTitle").text("‚úèÔ∏è S·ª≠a h√≥a ƒë∆°n");
            $("#orderId").val(data.orderId);
            $("#customerSelect").val(data.customerId);
            $("#petSelect").val(data.petId);
            $("#productSelect").val(data.productId);
            $("#quantity").val(data.productQuantity);
            $("#orderDate").val(data.orderDate.split("T")[0]);
            $("#totalAmount").val(data.totalAmount);
            modal.show();
        });
    }

    $("#orderForm").on("submit", function (e) {
        e.preventDefault();
        const id = $("#orderId").val();
        const method = id ? "PUT" : "POST";
        const url = id ? `/api/orders/${id}` : `/api/orders`;

        const order = {
            customerId: parseInt($("#customerSelect").val()),
            petId: parseInt($("#petSelect").val()) || null,
            productId: parseInt($("#productSelect").val()) || null,
            productQuantity: parseInt($("#quantity").val()),
            orderDate: $("#orderDate").val(),
            totalAmount: parseFloat($("#totalAmount").val())
        };

        fetch(url, {
            method: method,
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(order)
        })
            .then(res => res.json())
            .then(data => {
                modal.hide();
                $("#orderForm")[0].reset();
                $("#customerSelect").val('');
                $("#petSelect").val('');
                $("#productSelect").val('');
                Swal.fire("‚úÖ Th√†nh c√¥ng", data.message || "Th√†nh c√¥ng", "success");
                loadOrders($("#searchBox").val(), currentPage);
            })
            .catch(err => Swal.fire("‚ùå L·ªói", "Kh√¥ng th·ªÉ l∆∞u h√≥a ƒë∆°n", "error"));
    });

    function deleteOrder(id) {
        Swal.fire({
            title: 'B·∫°n ch·∫Øc ch·∫Øn mu·ªën x√≥a?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'X√≥a',
            cancelButtonText: 'H·ªßy'
        }).then((result) => {
            if (result.isConfirmed) {
                fetch(`/api/orders/${id}`, { method: 'DELETE' })
                    .then(res => res.json())
                    .then(data => {
                        Swal.fire("‚úÖ ƒê√£ x√≥a", data.message, "success");
                        loadOrders($("#searchBox").val(), currentPage);
                    })
                    .catch(() => Swal.fire("‚ùå L·ªói", "Kh√¥ng th·ªÉ x√≥a", "error"));
            }
        });
    }

    function loadSelects() {
        $.get("/api/customers/list", data => {
            const select = $("#customerSelect");
            select.empty();
            data.forEach(c => {
                select.append(`<option value="${c.customerId}">${c.fullName}</option>`);
            });
        });

        $.get("/api/pets/available", data => {
            const select = $("#petSelect");
            select.empty().append(`<option value="">(Kh√¥ng ch·ªçn)</option>`);
            data.forEach(p => {
                select.append(`<option value="${p.petId}">${p.name}</option>`);
            });
        });

        $.get("/api/products/list", data => {
            const select = $("#productSelect");
            select.empty().append(`<option value="">(Kh√¥ng ch·ªçn)</option>`);
            data.forEach(p => {
                select.append(`<option value="${p.productId}">${p.name}</option>`);
            });
        });
    }

    $(document).ready(function () {
        loadOrders();
        loadSelects();
        $("#searchBox").on("input", function () {
            loadOrders($(this).val(), 1);
        });
    });
</script>
}
