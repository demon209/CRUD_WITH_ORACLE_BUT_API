<h2>Trang qu·∫£n l√Ω th√¥ng tin d·ªãch v·ª•</h2>

<div class="mb-3 d-flex flex-column flex-sm-row gap-2">
    <input type="text" id="searchBox" class="form-control"
        placeholder="T√¨m theo t√™n th√∫ c∆∞ng, t√™n kh√°ch h√†ng, t√™n d·ªãch v·ª•,..." />
    <button class="btn btn-success" onclick="openAddForm()">Th√™m th√¥ng tin d·ªãch v·ª• m·ªõi</button>
</div>

<h2>Danh s√°ch th√¥ng tin d·ªãch v·ª•</h2>
<div class="row align-items-center mb-3">
    <div class="col-12 col-md-6 mb-3 mb-md-0">
        <div class="d-flex justify-content-between align-items-center">
            <!-- Checkbox b√™n tr√°i -->
            <div class="form-check m-0">
                <input class="form-check-input" type="checkbox" value="true" id="onlyAvailableCheckbox">
                <label class="form-check-label text-success" for="onlyAvailableCheckbox">
                    Ch·ªâ hi·ªán tr·∫°ng th√°i ho√†n th√†nh ‚úÖ
                </label>
            </div>

            <!-- N√∫t "L·ªçc" b√™n ph·∫£i -->
            <button class="btn btn-primary" id="filterButton">L·ªçc</button>
        </div>
    </div>
</div>


<div class="table-responsive">
    <table class="table table-striped table-bordered align-middle text-center">
        <thead class="table-light">
            <tr>
                <th>Customer Pet ID</th>
                <th>Customer ID</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Pet Name</th>
                <th>Product ID</th>
                <th>Product Name</th>
                <th>Tr·∫°ng th√°i</th>
                <th>Thao t√°c</th>
            </tr>
        </thead>
        <tbody id="customerpet-body">
            <tr>
                <td colspan="9">‚è≥ ƒêang t·∫£i danh s√°ch...</td>
            </tr>
        </tbody>
    </table>
</div>

<div class="d-flex justify-content-end mt-2" id="pagination"></div>


<!-- Modal Th√™m/S·ª≠a -->
<div id="customerpetModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="customerpetForm">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalTitle">Kh√°ch h√†ng</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="customerPetId" />
                    <!-- Customer -->
                    <div class="mb-2">
                        <select class="form-select" id="customerSelect" required></select>
                    </div>
                    <div class="mb-2"><input type="text" class="form-control" id="petName" placeholder="Pet Name"
                            required /></div>
                    <!-- Product -->
                    <div class="mb-2">
                        <select class="form-select" id="productSelect" required></select>
                    </div>
                    <div class="mb-2"><input type="text" class="form-control" id="status" placeholder="Status"
                            required />
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">üíæ L∆∞u</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">ƒê√≥ng</button>
                </div>
            </form>
        </div>
    </div>
</div>
@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        let currentPage = 1;
        const modal = new bootstrap.Modal(document.getElementById('customerpetModal'));

        function loadCustomerPets(keyword = "", page = 1) {
            currentPage = page;
            const onlyAvailable = $('#onlyAvailableCheckbox').is(':checked');
            let apiUrl = `/api/customer-pets/search?keyword=${encodeURIComponent(keyword)}&page=${page}`;
            if (onlyAvailable) apiUrl += `&onlyAvailable=true`;
            $("#customerpet-body").html('<tr><td colspan="9">‚è≥ ƒêang t·∫£i...</td></tr>');

            $.get(apiUrl, function (data) {
                const tbody = $("#customerpet-body");
                tbody.empty();

                if (data.data.length === 0) {
                    tbody.append(`<tr><td colspan="9" class="text-danger">Kh√¥ng c√≥ th√¥ng tin. <a href="/Dvdanglam" class="btn btn-secondary ms-2">‚Ü©Ô∏è Quay l·∫°i</a></td></tr>`);
                    $("#pagination").empty();
                    return;
                }

                data.data.forEach(cp => {
                    tbody.append(`
                                <tr>
                                    <td>${cp.customerPetId}</td>
                                    <td>${cp.customerId}</td>
                                    <td>${cp.firstName}</td>
                                    <td>${cp.lastName}</td>
                                    <td>${cp.petName}</td>
                                    <td>${cp.productId}</td>
                                    <td>${cp.productName}</td>
                                    <td>${cp.status}</td>
                                    <td>
                                        <button class="btn btn-warning btn-sm" onclick="openEditForm(${cp.customerPetId})">‚úèÔ∏è S·ª≠a</button>
                                        <button class="btn btn-danger btn-sm" onclick="deleteCustomerPet(${cp.customerPetId})">‚ùå X√≥a</button>
                                        <button class="btn btn-info btn-sm" onclick="toggleStatus(${cp.customerPetId})">üîÑ ƒê·ªïi tr·∫°ng th√°i</button>
                                    </td>
                                </tr>`);
                });

                renderPagination(data.currentPage || data.CurrentPage, data.totalPages || data.TotalPages);
            });
        }

        function renderPagination(current, total) {
            const container = $("#pagination");
            container.empty();
            for (let i = 1; i <= total; i++) {
                const btn = `<button onclick="loadCustomerPets($('#searchBox').val(), ${i})"
                                                        class="btn btn-sm ${i === current ? 'btn-primary' : 'btn-outline-primary'} mx-1">${i}</button>`;
                container.append(btn);
            }
        }
        function loadDropdowns(selectedCustomerId = null, selectedProductId = null) {
            $.get("/api/customers/list", function (data) {
                const customerSelect = $("#customerSelect");
                customerSelect.empty();
                customerSelect.append('<option disabled selected value="">-- Ch·ªçn kh√°ch h√†ng --</option>');
                data.forEach(c => {
                    const selected = c.customerId === selectedCustomerId ? "selected" : "";
                    customerSelect.append(`<option value="${c.customerId}" ${selected}>${c.fullName}</option>`);
                });
            });

            $.get("/api/products/services", function (data) {
                const productSelect = $("#productSelect");
                productSelect.empty();
                productSelect.append('<option disabled selected value="">-- Ch·ªçn d·ªãch v·ª• --</option>');
                data.forEach(p => {
                    const selected = p.productId === selectedProductId ? "selected" : "";
                    productSelect.append(`<option value="${p.productId}" ${selected}>${p.name}</option>`);
                });
            });
        }


        function openAddForm() {
            $("#modalTitle").text("üôã Th√™m kh√°ch h√†ng m·ªõi");
            $("#customerpetForm")[0].reset();
            $("#customerPetId").val('');
            loadDropdowns(); // Load dropdown r·ªóng
            modal.show();
        }


        function openEditForm(id) {
            $.get(`/api/customer-pets/${id}`, function (data) {
                $("#modalTitle").text("üë®‚Äçüîß S·ª≠a th√¥ng tin d·ªãch v·ª•");
                $("#customerPetId").val(data.customerPetId);
                loadDropdowns(data.customerId, data.productId); // Load dropdown c√≥ selected
                $("#petName").val(data.petName);
                $("#status").val(data.status);
                modal.show();
            });
        }


        $("#customerpetForm").on("submit", function (e) {
            e.preventDefault();

            const id = $("#customerPetId").val();
            const method = id ? "PUT" : "POST";
            const url = id ? `/api/customer-pets/${id}` : `/api/customer-pets`;

            const customerpet = {
                customerId: parseInt($("#customerSelect").val()),
                productId: parseInt($("#productSelect").val()),
                petName: $("#petName").val(),
                status: $("#status").val()
            };


            fetch(url, {
                method: method,
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(customerpet)
            })
                .then(res => res.json())
                .then(data => {
                    modal.hide();
                    Swal.fire("‚úÖ Th√†nh c√¥ng", data.message || "Th√†nh c√¥ng", "success");
                    loadCustomerPets($("#searchBox").val(), currentPage);
                })
                .catch(err => Swal.fire("‚ùå L·ªói", "Kh√¥ng th·ªÉ l∆∞u th√¥ng tin", "error"));
        });

        function deleteCustomerPet(id) {
            Swal.fire({
                title: 'B·∫°n ch·∫Øc ch·∫Øn mu·ªën x√≥a?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'X√≥a',
                cancelButtonText: 'H·ªßy'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/api/customer-pets/${id}`, { method: 'DELETE' })
                        .then(res => res.json())
                        .then(data => {
                            Swal.fire("‚úÖ ƒê√£ x√≥a", data.message, "success");
                            loadCustomerPets($("#searchBox").val(), currentPage);
                        })
                        .catch(() => Swal.fire("‚ùå L·ªói", "Kh√¥ng th·ªÉ x√≥a", "error"));
                }
            });
        }

        $(document).ready(function () {
            loadCustomerPets();

            $("#searchBox").on("input", function () {
                loadCustomerPets($(this).val(), 1);
            });
        });
        // L·ªçc
        $("#filterButton").on("click", function () {
            loadCustomerPets($("#searchBox").val(), 1);
        });


        function toggleStatus(id) {
            fetch("/api/customer-pets/toggle-status", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(id)
            })
                .then(res => res.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire("‚úÖ Th√†nh c√¥ng", `Tr·∫°ng th√°i m·ªõi c·ªßa tt d·ªãch v·ª• c√≥ ID: ${data.id} l√† ${data.newStatus}`, "success");
                        loadCustomerPets($("#searchBox").val(), currentPage);
                    } else {
                        Swal.fire("‚ùå L·ªói", data.message || "Kh√¥ng th·ªÉ ƒë·ªïi tr·∫°ng th√°i", "error");
                    }
                })
                .catch(() => Swal.fire("‚ùå L·ªói", "Kh√¥ng th·ªÉ k·∫øt n·ªëi m√°y ch·ªß", "error"));
        }

    </script>
}
